Bootstrap: docker
From: ubuntu:18.04

%help
    Build environment for Occupancy Networks (CPU version) with specific Python dependencies 
    and fixes for compilation and import errors.
    Maintainer: Your Name <your.email@example.com>

%environment
    export DEBIAN_FRONTEND=noninteractive
    export TZ=Etc/UTC
    export LANG=C.UTF-8
    export PYTHONUNBUFFERED=1
    export CUDA_HOME=/usr/local/cuda
    export PATH=${CUDA_HOME}/bin:${PATH}
    export LD_LIBRARY_PATH=${CUDA_HOME}/lib64:${LD_LIBRARY_PATH}

%files
    # Copy application files to container
    eval_meshes.py /app/occupancy_networks/
    eval.py /app/occupancy_networks/
    generate.py /app/occupancy_networks/
    setup.py /app/occupancy_networks/
    train.py /app/occupancy_networks/
    configs /app/occupancy_networks/configs
    demo /app/occupancy_networks/demo
    external /app/occupancy_networks/external
    im2mesh /app/occupancy_networks/im2mesh
    img /app/occupancy_networks/img
    scripts /app/occupancy_networks/scripts

%post
    # Set environment for build
    export DEBIAN_FRONTEND=noninteractive
    export TZ=Etc/UTC
    export LANG=C.UTF-8
    export PYTHONUNBUFFERED=1

    # Install system dependencies
    apt-get update && \
    apt-get install -y --no-install-recommends \
        python3.6 \
        python3.6-dev \
        python3-pip \
        build-essential \
        git \
        libomp-dev \
        wget && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

    # Set up python3.6 as default
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 1
    update-alternatives --install /usr/bin/pip pip /usr/bin/pip3 1

    # Upgrade pip and install basic build tools
    python3 -m pip install --no-cache-dir --upgrade pip
    python3 -m pip install --no-cache-dir wheel setuptools

    # Install PyTorch and NumPy first
    python3 -m pip install --no-cache-dir torch==1.0.1 torchvision==0.2.1
    python3 -m pip install --no-cache-dir numpy==1.15.4

    # WORKAROUND: Copy NumPy headers to global include path
    # This helps compilation steps find "numpy/arrayobject.h"
    cp -r /usr/local/lib/python3.6/dist-packages/numpy/core/include/numpy /usr/local/include/numpy

    # Install remaining dependencies
    python3 -m pip install --no-cache-dir \
        scipy==1.1.0 \
        cython==0.29.2 \
        h5py==2.9.0 \
        Pillow==5.3.0 \
        scikit-image==0.14.1 \
        imageio==2.4.1 \
        matplotlib==3.0.3 \
        pandas==0.23.4 \
        PyYAML==3.13 \
        tensorboardX==1.4 \
        tqdm==4.28.1 \
        trimesh==2.37.7 \
        plyfile==0.7 \
        pytest==4.0.2

    # Add NVIDIA CUDA repository
    apt-get update && apt-get upgrade -y
    wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/cuda-keyring_1.0-1_all.deb
    dpkg -i cuda-keyring_1.0-1_all.deb
    rm cuda-keyring_1.0-1_all.deb

    # Install CUDA toolkit
    apt-get update && apt-get install -y --no-install-recommends \
        cuda-toolkit-10-1 && \
        rm -rf /var/lib/apt/lists/*

    # Create app directory and set permissions
    mkdir -p /app/occupancy_networks
    cd /app/occupancy_networks

    # Compile Cython/C++ extensions
    python3 setup.py build_ext --inplace

    # Run the demo during build to download models
    python3 generate.py configs/demo.yaml

%runscript
    # Default to bash when container runs
    exec /bin/bash "$@"

%startscript
    # Commands to run when container starts as an instance
    echo "Occupancy Networks container started"

%labels
    Author Arne Neumann <onet.programming@arne.cl>
    Description Build environment for Occupancy Networks (CPU version)
    Version 1.0

